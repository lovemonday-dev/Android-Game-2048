/*
 * Copyright (C) 2013-2019 2048FX 
 * Jose Pereda, Bruno Borges & Jens Deters
 * All rights reserved.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.javafxports:jfxmobile-plugin:1.3.16'
    }
}

apply plugin: 'org.javafxports.jfxmobile'

repositories {
    mavenCentral()
    maven {
        url 'http://nexus.gluonhq.com/nexus/content/repositories/releases/'
    }
}

dependencies {
    compile "com.gluonhq:glisten-afterburner:1.4.1"

    compile 'com.gluonhq:charm-cloudlink-client:4.5.2'
    compile 'com.gluonhq:charm-glisten-connect-view:5.0.2'
    compile 'com.gluonhq:connect:1.5.0'
}

mainClassName = 'org.jpereda.game2048.Game2048'

jfxmobile {
    javafxportsVersion = "8.60.11"
    downConfig {
        version = "3.8.6"
        plugins 'browser', 'cache', 'device', 'display', 'lifecycle', 'settings', 'statusbar', 'storage', 'vibration'
    }
    ios {
        infoPList = file('src/ios/Info.plist')
        forceLinkClasses = [ 'org.jpereda.**.*',
                             'com.gluonhq.**.*',
                             'org.glassfish.json.**.*' ]
    }
    
    android {
        manifest = 'src/android/AndroidManifest.xml'
        signingConfig {
            storeFile project.hasProperty('RELEASE_STORE_KEYSTORE') ? file(RELEASE_STORE_KEYSTORE) : null
            storePassword project.hasProperty('RELEASE_STORE_PASSWORD') ? RELEASE_STORE_PASSWORD : ''
            keyAlias project.hasProperty('RELEASE_KEY_ALIAS') ? RELEASE_KEY_ALIAS : ''
            keyPassword project.hasProperty('RELEASE_KEY_PASSWORD') ? RELEASE_KEY_PASSWORD : ''
        }
    }    
}

